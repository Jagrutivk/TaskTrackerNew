{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactpro\\\\youtubepro1\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport About from './components/About'; // import About from './components/About'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:8080/');\n    const data = await res.json();\n    return data;\n  }; // Fetch Task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:8080/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add task\n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:8080/add', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }; // Delete Task \n\n\n  const deleteTask = async id => {\n    const res = await fetch(`http://localhost:8080/delete/${id}`, {\n      method: 'DELETE'\n    }); //We should control the response status to decide if we will change the state or not.\n\n    res.status === 200 ? setTasks(tasks.filter(task => task.id !== id)) : alert('Error Deleting This Task');\n  }; //Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:8080/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onAdd: () => setShowAddTask(!showAddTask),\n          showAdd: showAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n                onAdd: addTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n                tasks: tasks,\n                onDelete: deleteTask,\n                onToggle: toggleReminder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this) : 'No Tasks To Show']\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Route","Routes","Header","Footer","Tasks","AddTask","About","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","status","filter","alert","toggleReminder","taskToToggle","updTask","reminder","map","length"],"sources":["D:/reactpro/youtubepro1/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\n// import About from './components/About'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:8080/')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:8080/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  //Add task\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:8080/add', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete Task \n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:8080/delete/${id}`, {\n      method: 'DELETE',\n    })\n    //We should control the response status to decide if we will change the state or not.\n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert('Error Deleting This Task')\n  }\n\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:8080/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    )\n  }\n\n\n  return (\n    <Router>\n      <div>\n\n      \n      <div className='container'>\n        \n       \n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? (\n                  <Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleReminder}\n                  />\n                ) : (\n                  'No Tasks To Show'\n                )}\n              </>\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n      </div>\n    </Router>\n  )\n}\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}