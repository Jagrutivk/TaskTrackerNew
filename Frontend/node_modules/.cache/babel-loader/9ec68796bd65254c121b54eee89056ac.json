{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactpro\\\\youtubepro\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask'; // import Footer from './comp onents/Footer'\n// import About from './components/About'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; // Fetch Task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Delete Task \n\n\n  const deleteTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    }); //We should control the response status to decide if we will change the state or not.\n\n    res.status === 200 ? setTasks(tasks.filter(task => task.id !== id)) : alert('Error Deleting This Task');\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTasks,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this) : 'No Tasks To shown']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"W8e4TQ6qvI3S9BwlnGUafrrS180=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","Math","floor","random","newTask","deleteTask","method","status","filter","alert","toggleReminder","map","reminder","length","deleteTasks"],"sources":["D:/reactpro/youtubepro/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n// import Footer from './comp onents/Footer'\n// import About from './components/About'\n\n  const App = () => {\n    const[showAddTask, setShowAddTask]=useState(false)\n    const [tasks, setTasks] = useState([ ])\n\n    useEffect(() => {\n      const getTasks = async () => {\n        const tasksFromServer = await fetchTasks()\n        setTasks(tasksFromServer)\n      }\n  \n      getTasks()\n    }, [])\n  \n    // Fetch Tasks\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks')\n      const data = await res.json()\n  \n      return data\n    }\n  \n    // Fetch Task\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`)\n      const data = await res.json()\n  \n      return data\n    }\n\n//Add task\n\nconst addTask=(task)=>{\n  const id =Math.floor(Math.random()*10000)+1;\n  const newTask={id, ...task}\n  setTasks([...tasks,newTask])\n}\n// Delete Task \nconst deleteTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE',\n  })\n  //We should control the response status to decide if we will change the state or not.\n  res.status === 200\n    ? setTasks(tasks.filter((task) => task.id !== id))\n    : alert('Error Deleting This Task')\n}\n\n\n//Toggle Reminder\nconst toggleReminder= (id)=>{\n  setTasks(\n    tasks.map((task)=>task.id===id ?{...task,reminder: !task.reminder}:task)\n  )\n}\n    return (\n      <div className='container'>\n     <Header onAdd={()=>setShowAddTask(!showAddTask) }showAdd={showAddTask}/>\n     {showAddTask &&  <AddTask onAdd={addTask}/>}\n     {tasks.length > 0 ? (\n       <Tasks tasks={tasks} onDelete = {deleteTasks} onToggle={toggleReminder} />\n      ) :( \n          'No Tasks To shown'\n      )}\n      {/* <Footer/> */}\n             </div>\n      \n  )\n}\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}