{"ast":null,"code":"var _jsxFileName = \"D:\\\\youtubeproJASON\\\\client - AddTask\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Header from './components/Header'; // import Footer from './components/Footer'\n\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask'; // import About from './components/About'\n// import axios from 'react'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]); // const URL = 'http://localhost:5000/tasks';\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; // // Fetch Task\n  // const fetchTask = async (id) => {\n  //   const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  //   const data = await res.json()\n  //   return data\n  // }\n  // Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); //   app.get (\"/\", (req,res) => {\n    //   axios\n    //   .get(URL)\n    //   .then(response => {\n    //     console.log(response.data);\n    //     res.send(response.data)\n    //   })\n    //   .catch(error => {\n    //     console.log(error.message);\n    //   });\n    // });\n  }; // Delete Task\n  // const deleteTask = async (id) => {\n  //   const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n  //     method: 'DELETE',\n  //   })\n  //   //We should control the response status to decide if we will change the state or not.\n  //   res.status === 200\n  //     ? setTasks(tasks.filter((task) => task.id !== id))\n  //     : alert('Error Deleting This Task')\n  // }\n  // Toggle Reminder\n  // const toggleReminder = async (id) => {\n  //   const taskToToggle = await fetchTask(id)\n  //   const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n  //   const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-type': 'application/json',\n  //     },\n  //     body: JSON.stringify(updTask),\n  //   })\n  //   const data = await res.json()\n  //   setTasks(\n  //     tasks.map((task) =>\n  //       task.id === id ? { ...task, reminder: data.reminder } : task\n  //     )\n  //   )\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onAdd: () => setShowAddTask(!showAddTask),\n          showAdd: showAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n                onAdd: addTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n                tasks: tasks // onDelete={deleteTask}\n                // onToggle={toggleReminder}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this) : 'No Tasks To Show']\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","method","headers","body","JSON","stringify","length"],"sources":["D:/youtubeproJASON/client - AddTask/src/App.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './components/Header'\n// import Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n// import About from './components/About'\n// import axios from 'react'\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  // const URL = 'http://localhost:5000/tasks';\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // // Fetch Task\n  // const fetchTask = async (id) => {\n  //   const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  //   const data = await res.json()\n\n  //   return data\n  // }\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n  //   app.get (\"/\", (req,res) => {\n   \n\n  //   axios\n  //   .get(URL)\n  //   .then(response => {\n  //     console.log(response.data);\n  //     res.send(response.data)\n      \n  //   })\n  //   .catch(error => {\n  //     console.log(error.message);\n  //   });\n  // });\n    \n  }\n\n  // Delete Task\n  // const deleteTask = async (id) => {\n  //   const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n  //     method: 'DELETE',\n  //   })\n  //   //We should control the response status to decide if we will change the state or not.\n  //   res.status === 200\n  //     ? setTasks(tasks.filter((task) => task.id !== id))\n  //     : alert('Error Deleting This Task')\n  // }\n\n  // Toggle Reminder\n  // const toggleReminder = async (id) => {\n  //   const taskToToggle = await fetchTask(id)\n  //   const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n  //   const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-type': 'application/json',\n  //     },\n  //     body: JSON.stringify(updTask),\n  //   })\n\n  //   const data = await res.json()\n\n  //   setTasks(\n  //     tasks.map((task) =>\n  //       task.id === id ? { ...task, reminder: data.reminder } : task\n  //     )\n  //   )\n  // }\n\n\n  return (\n    <Router>\n      <div>\n\n      \n      <div className='container'>\n        \n       \n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Routes>\n          <Route\n            path='/'\n            element={\n   \n              <>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? (\n                  <Tasks\n                    tasks={tasks}\n                    // onDelete={deleteTask}\n                    // onToggle={toggleReminder}\n                  />\n                ) : (\n                  'No Tasks To Show'\n                )}\n              </>\n            }\n           /> \n          {/* <Route path='/about' element={<About />} /> */}\n        </Routes>\n        {/* <Footer /> */}\n      </div>\n      </div>\n     </Router>\n  )\n}\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;AACA;;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC,CAFgB,CAGhB;;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAG,YAAY;MAC3B,MAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;MACAH,QAAQ,CAACE,eAAD,CAAR;IACD,CAHD;;IAKAD,QAAQ;EACT,CAPQ,EAON,EAPM,CAAT,CALgB,CAchB;;EACA,MAAME,UAAU,GAAG,YAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IAEA,OAAOD,IAAP;EACD,CALD,CAfgB,CAsBhB;EACA;EACA;EACA;EAEA;EACA;EAEA;;;EACA,MAAME,OAAO,GAAG,MAAOC,IAAP,IAAgB;IAC9B,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;MACrDK,MAAM,EAAE,MAD6C;MAErDC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF4C;MAKrDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;IAL+C,CAAhC,CAAvB;IAQA,MAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IAEAP,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWO,IAAX,CAAD,CAAR,CAX8B,CAahC;IAGA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;EAEC,CA5BD,CA/BgB,CA6DhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;;;EAGA,oBACE,QAAC,MAAD;IAAA,uBACE;MAAA,uBAGA;QAAK,SAAS,EAAC,WAAf;QAAA,wBAGE,QAAC,MAAD;UACE,KAAK,EAAE,MAAMR,cAAc,CAAC,CAACD,WAAF,CAD7B;UAEE,OAAO,EAAEA;QAFX;UAAA;UAAA;UAAA;QAAA,QAHF,eAOE,QAAC,MAAD;UAAA,uBACE,QAAC,KAAD;YACE,IAAI,EAAC,GADP;YAEE,OAAO,eAEL;cAAA,WACGA,WAAW,iBAAI,QAAC,OAAD;gBAAS,KAAK,EAAEW;cAAhB;gBAAA;gBAAA;gBAAA;cAAA,QADlB,EAEGT,KAAK,CAACgB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;gBACE,KAAK,EAAEhB,KADT,CAEE;gBACA;;cAHF;gBAAA;gBAAA;gBAAA;cAAA,QADD,GAOC,kBATJ;YAAA;UAJJ;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA;IAHA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsCD,CArID;;GAAMH,G;;KAAAA,G;AAsIN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}